def euclidianDistance(vectorOne, vectorTwo):
    if len(vectorOne) != len(vectorTwo):
        raise Exception("Dimension Mismatch")

    return math.sqrt(sum([pow(vectorOne[index] - vectorTwo[index], 2) for index in range(len(vectorOne))]))

def sexDistance(instructorOne, instructorTwo):
    return 0 if instructorOne.sex == instructorTwo.sex else 1


def gradeDistance(instructorOne, instructorTwo):
    return cdfDistance(instructorOne.gradevector, instructorTwo.gradevector)


def wageDistance(instructorOne, instructorTwo):
    return euclidianDistance(instructorOne.wagevec, instructorTwo.wagevec)


def feedbackDistance(instructorOne, instructorTwo):
    return euclidianDistance(instructorOne.l2feedback, instructorTwo.l2feedback)


def titleDistance(instructorOne, instructorTwo):
    return 1 - jaccardSimilarity(instructorOne.positions, instructorTwo.positions)


def researchDistance(instructorOne, instructorTwo):
    return 1 - jaccardSimilarity(instructorOne.researchkgram, instructorTwo.researchkgram)
