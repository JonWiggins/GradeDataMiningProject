def vectorLength(vector, L=2):
    sum = 0
    for i in range(len(vector)):
        sum += pow(abs(vector[i]), L)

    return pow(sum, 1 / L)

# normalizes the given vector
def normalize(vector, L=2):
    length = vectorLength(vector, L)
    return [vector[i] / length for i in range(len(vector))]


def jaccardSimilarity(setOne, setTwo):
    if len(setOne | setTwo) == 0:
        return 0
    return len(setOne & setTwo) / len(setOne | setTwo)
